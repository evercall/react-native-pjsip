{"version":3,"sources":["../src/Account.ts"],"names":["AccountRegistration","Account","constructor","data","_data","_registration","registration","getId","id","getURI","uri","getName","name","getUsername","username","getDomain","domain","getPassword","password","getProxy","proxy","getTransport","transport","getContactParams","contactParams","getContactUriParams","contactUriParams","getRegServer","regServer","getRegTimeout","regTimeout","getRegContactParams","regContactParams","getRegHeaders","regHeaders","getRegistration"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AAEA;AACA;AACA;;AAmBA;AACA;AACA;AACA,eAAe,MAAMC,OAAN,CAAc;AAKzBC,EAAAA,WAAW,CAACC,IAAD,EAAY;AACrB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,aAAL,GAAqB,IAAIL,mBAAJ,CAAwBG,IAAI,CAACG,YAA7B,CAArB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,KAAK,GAAW;AACd,WAAO,KAAKH,KAAL,CAAWI,EAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,MAAM,GAAW;AACf,WAAO,KAAKL,KAAL,CAAWM,GAAlB;AACD;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,OAAO,GAAW;AAChB,WAAO,KAAKP,KAAL,CAAWQ,IAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,WAAW,GAAW;AACpB,WAAO,KAAKT,KAAL,CAAWU,QAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,SAAS,GAAW;AAClB,WAAO,KAAKX,KAAL,CAAWY,MAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,WAAW,GAAW;AACpB,WAAO,KAAKb,KAAL,CAAWc,QAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,QAAQ,GAAW;AACjB,WAAO,KAAKf,KAAL,CAAWgB,KAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,YAAY,GAAW;AACrB,WAAO,KAAKjB,KAAL,CAAWkB,SAAlB;AACD;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,gBAAgB,GAAW;AACzB,WAAO,KAAKnB,KAAL,CAAWoB,aAAlB;AACD;AAED;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,mBAAmB,GAAW;AAC5B,WAAO,KAAKrB,KAAL,CAAWsB,gBAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,YAAY,GAAW;AACrB,WAAO,KAAKvB,KAAL,CAAWwB,SAAX,IAAwB,EAA/B;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,aAAa,GAAW;AACtB,WAAO,KAAKzB,KAAL,CAAW0B,UAAlB;AACD;AAED;AACJ;AACA;;;AACIC,EAAAA,mBAAmB,GAAW;AAC5B,WAAO,KAAK3B,KAAL,CAAW4B,gBAAlB;AACD;AAED;AACJ;AACA;;;AACIC,EAAAA,aAAa,GAAW;AACtB,WAAO,KAAK7B,KAAL,CAAW8B,UAAlB;AACD;AAED;AACJ;AACA;AACA;;;AACIC,EAAAA,eAAe,GAAwB;AACrC,WAAO,KAAK9B,aAAZ;AACD;;AAjIwB","sourcesContent":["import AccountRegistration from './AccountRegistration'\n\n/**\n * URI: If this value has been set to null, then it will return ´\"sip:\" + this.getDomain´\n */\nexport type AccountConfiguration = {\n    id: number,\n    uri: string | null,\n    name: string | null,\n    username: string,\n    domain: string,\n    password: string,\n    proxy: string | null,\n    transport: string | null,\n    contactParams: string | null,\n    contactUriParams: string | null,\n    regServer: string | null,\n    regTimeout: string | null,\n    regContactParams: string | null,\n    regHeaders: Object | null,\n    regOnAdd: boolean | null\n};\n\n/**\n * This describes account configuration and registration status\n */\nexport default class Account {\n    _data: AccountConfiguration;\n\n    _registration: AccountRegistration;\n\n    constructor(data: any) {\n      this._data = data\n      this._registration = new AccountRegistration(data.registration)\n    }\n\n    /**\n     * The account ID.\n     * @returns {int}\n     */\n    getId(): number {\n      return this._data.id\n    }\n\n    /**\n     * This is the URL to be put in the request URI for the registration, and will look something like \"sip:serviceprovider\".\n     * @returns {String}\n     */\n    getURI(): string {\n      return this._data.uri\n    }\n\n    /**\n     * Full name specified in Endpoint.createAccount().\n     * If this value has been set to null, then it will return \"sip:\" + this.getDomain\n     * @returns {String}\n     */\n    getName(): string {\n      return this._data.name\n    }\n\n    /**\n     * Username specified in Endpoint.createAccount().\n     * @returns {String}\n     */\n    getUsername(): string {\n      return this._data.username\n    }\n\n    /**\n     * Domain specified in Endpoint.createAccount().\n     * @returns {string}\n     */\n    getDomain(): string {\n      return this._data.domain\n    }\n\n    /**\n     * Password specified in Endpoint.createAccount().\n     * @returns {String}\n     */\n    getPassword(): string {\n      return this._data.password\n    }\n\n    /**\n     * Proxy specified in Endpoint.createAccount().\n     * @returns {String}\n     */\n    getProxy(): string {\n      return this._data.proxy\n    }\n\n    /**\n     * Transport specified in Endpoint.createAccount().\n     * @returns {String}\n     */\n    getTransport(): string {\n      return this._data.transport\n    }\n\n    /**\n     * Additional parameters that will be appended in the Contact header\n     * for this account.\n     * @returns {String}\n     */\n    getContactParams(): string {\n      return this._data.contactParams\n    }\n\n    /**\n     * Additional URI parameters that will be appended in the Contact URI\n     * for this account.\n     * @returns {String}\n     */\n    getContactUriParams(): string {\n      return this._data.contactUriParams\n    }\n\n    /**\n     * Port specified in Endpoint.createAccount().\n     * @returns {String}\n     */\n    getRegServer(): string {\n      return this._data.regServer || ''\n    }\n\n    /**\n     * Port specified in Endpoint.createAccount().\n     * @returns {String}\n     */\n    getRegTimeout(): string {\n      return this._data.regTimeout\n    }\n\n    /**\n     * @returns {String}\n     */\n    getRegContactParams(): string {\n      return this._data.regContactParams\n    }\n\n    /**\n     * @returns {Object}\n     */\n    getRegHeaders(): Object {\n      return this._data.regHeaders\n    }\n\n    /**\n     * Account registration status.\n     * @returns {AccountRegistration}\n     */\n    getRegistration(): AccountRegistration {\n      return this._registration\n    }\n}\n"],"file":"Account.js"}