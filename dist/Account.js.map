{"version":3,"sources":["../src/Account.ts"],"names":["AccountRegistration","Account","constructor","data","_data","_registration","registration","getId","id","getURI","uri","getName","name","getUsername","username","getDomain","domain","getPassword","password","getProxy","proxy","getTransport","transport","getContactParams","contactParams","getContactUriParams","contactUriParams","getRegServer","regServer","getRegTimeout","regTimeout","getRegContactParams","regContactParams","getRegHeaders","regHeaders","getRegistration"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AAEA;AACA;AACA;;AAmBA;AACA;AACA;AACA,eAAe,MAAMC,OAAN,CAAc;AAK3BC,EAAAA,WAAW,CAAEC,IAAF,EAAa;AACtB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,aAAL,GAAqB,IAAIL,mBAAJ,CAAwBG,IAAI,CAACG,YAA7B,CAArB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,KAAK,GAAY;AACf,WAAO,KAAKH,KAAL,CAAWI,EAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,MAAM,GAAY;AAChB,WAAO,KAAKL,KAAL,CAAWM,GAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,OAAO,GAAmB;AACxB,WAAO,KAAKP,KAAL,CAAWQ,IAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,WAAW,GAAY;AACrB,WAAO,KAAKT,KAAL,CAAWU,QAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,SAAS,GAAY;AACnB,WAAO,KAAKX,KAAL,CAAWY,MAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,WAAW,GAAY;AACrB,WAAO,KAAKb,KAAL,CAAWc,QAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,QAAQ,GAAmB;AACzB,WAAO,KAAKf,KAAL,CAAWgB,KAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,YAAY,GAAmB;AAC7B,WAAO,KAAKjB,KAAL,CAAWkB,SAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,gBAAgB,GAAmB;AACjC,WAAO,KAAKnB,KAAL,CAAWoB,aAAlB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,mBAAmB,GAAmB;AACpC,WAAO,KAAKrB,KAAL,CAAWsB,gBAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,YAAY,GAAmB;AAC7B,WAAO,KAAKvB,KAAL,CAAWwB,SAAX,IAAwB,EAA/B;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,aAAa,GAAY;AACvB,WAAO,KAAKzB,KAAL,CAAW0B,UAAlB;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,mBAAmB,GAAmB;AACpC,WAAO,KAAK3B,KAAL,CAAW4B,gBAAlB;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,aAAa,GAAmB;AAC9B,WAAO,KAAK7B,KAAL,CAAW8B,UAAlB;AACD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,eAAe,GAAyB;AACtC,WAAO,KAAK9B,aAAZ;AACD;;AAjI0B","sourcesContent":["import AccountRegistration from './AccountRegistration'\n\n/**\n * URI: If this value has been set to null, then it will return ´\"sip:\" + this.getDomain´\n */\nexport type AccountConfiguration = {\n  id?: number,\n  uri?: string,\n  name?: string | null,\n  username: string,\n  domain: string,\n  password: string,\n  proxy?: string | null,\n  transport?: string | null,\n  contactParams?: string | null,\n  contactUriParams?: string | null,\n  regServer?: string | null,\n  regTimeout?: number,\n  regContactParams?: string | null,\n  regHeaders?: Object | null,\n  regOnAdd?: boolean\n};\n\n/**\n * This describes account configuration and registration status\n */\nexport default class Account {\n  _data: AccountConfiguration\n\n  _registration: AccountRegistration\n\n  constructor (data: any) {\n    this._data = data\n    this._registration = new AccountRegistration(data.registration)\n  }\n\n  /**\n   * The account ID.\n   * @returns {number}\n   */\n  getId (): number {\n    return this._data.id\n  }\n\n  /**\n   * This is the URL to be put in the request URI for the registration, and will look something like \"sip:serviceprovider\".\n   * @returns {string}\n   */\n  getURI (): string {\n    return this._data.uri\n  }\n\n  /**\n   * Full name specified in Endpoint.createAccount().\n   * If this value has been set to null, then it will return \"sip:\" + this.getDomain\n   * @returns {string|null}\n   */\n  getName (): string | null {\n    return this._data.name\n  }\n\n  /**\n   * Username specified in Endpoint.createAccount().\n   * @returns {string}\n   */\n  getUsername (): string {\n    return this._data.username\n  }\n\n  /**\n   * Domain specified in Endpoint.createAccount().\n   * @returns {string}\n   */\n  getDomain (): string {\n    return this._data.domain\n  }\n\n  /**\n   * Password specified in Endpoint.createAccount().\n   * @returns {string}\n   */\n  getPassword (): string {\n    return this._data.password\n  }\n\n  /**\n   * Proxy specified in Endpoint.createAccount().\n   * @returns {string|null}\n   */\n  getProxy (): string | null {\n    return this._data.proxy\n  }\n\n  /**\n   * Transport specified in Endpoint.createAccount().\n   * @returns {string|null}\n   */\n  getTransport (): string | null {\n    return this._data.transport\n  }\n\n  /**\n   * Additional parameters that will be appended in the Contact header\n   * for this account.\n   * @returns {string|null}\n   */\n  getContactParams (): string | null {\n    return this._data.contactParams\n  }\n\n  /**\n   * Additional URI parameters that will be appended in the Contact URI\n   * for this account.\n   * @returns {string|null}\n   */\n  getContactUriParams (): string | null {\n    return this._data.contactUriParams\n  }\n\n  /**\n   * Port specified in Endpoint.createAccount().\n   * @returns {string|null}\n   */\n  getRegServer (): string | null {\n    return this._data.regServer || ''\n  }\n\n  /**\n   * Port specified in Endpoint.createAccount().\n   * @returns {number}\n   */\n  getRegTimeout (): number {\n    return this._data.regTimeout\n  }\n\n  /**\n   * @returns {string|null}\n   */\n  getRegContactParams (): string | null {\n    return this._data.regContactParams\n  }\n\n  /**\n   * @returns {Object|null}\n   */\n  getRegHeaders (): Object | null {\n    return this._data.regHeaders\n  }\n\n  /**\n   * Account registration status.\n   * @returns {AccountRegistration}\n   */\n  getRegistration (): AccountRegistration {\n    return this._registration\n  }\n}\n"],"file":"Account.js"}