{"version":3,"sources":["../src/Account.ts"],"names":["Account","constructor","props","id","uri","name","username","domain","password","proxy","transport","contactParams","contactUriParams","regServer","regTimeout","regContactParams","regHeaders","regOnAdd","registration"],"mappings":"AAwqBA;AACA;AACA;AACA,eAAe,MAAMA,OAAN,CAAkC;AAC/C;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;AACA;;AAEE;AACF;AACA;AACA;;AAEE;AACF;AACA;;AAEE;AACF;AACA;;AAKE;AACF;AACA;AAGEC,EAAAA,WAAW,CAAEC,KAAF,EAAmB;AAC5B,SAAKC,EAAL,GAAUD,KAAK,CAACC,EAAhB;AACA,SAAKC,GAAL,GAAWF,KAAK,CAACE,GAAjB;AACA,SAAKC,IAAL,GAAYH,KAAK,CAACG,IAAlB;AACA,SAAKC,QAAL,GAAgBJ,KAAK,CAACI,QAAtB;AACA,SAAKC,MAAL,GAAcL,KAAK,CAACK,MAApB;AACA,SAAKC,QAAL,GAAgBN,KAAK,CAACM,QAAtB;AACA,SAAKC,KAAL,GAAaP,KAAK,CAACO,KAAnB;AACA,SAAKC,SAAL,GAAiBR,KAAK,CAACQ,SAAvB;AACA,SAAKC,aAAL,GAAqBT,KAAK,CAACS,aAA3B;AACA,SAAKC,gBAAL,GAAwBV,KAAK,CAACU,gBAA9B;AACA,SAAKC,SAAL,GAAiBX,KAAK,CAACW,SAAvB;AACA,SAAKC,UAAL,GAAkBZ,KAAK,CAACY,UAAxB;AACA,SAAKC,gBAAL,GAAwBb,KAAK,CAACa,gBAA9B;AACA,SAAKC,UAAL,GAAkBd,KAAK,CAACc,UAAxB;AACA,SAAKC,QAAL,GAAgBf,KAAK,CAACe,QAAtB;AACA,SAAKC,YAAL,GAAoBhB,KAAK,CAACgB,YAA1B;AACD;;AA7E8C","sourcesContent":["import { IAccountRegistration } from './AccountRegistration'\n\nexport interface IAccountConfig {\n\n  /**\n   * Account priority, which is used to control the order of matching\n   * incoming/outgoing requests. The higher the number means the higher\n   * the priority is, and the account will be matched first.\n   */\n  priority?: number;\n\n  /**\n   * The full SIP URL for the account. The value can take name address or\n   * URL format, and will look something like \"sip:account@serviceprovider\"\n   * or \"\\\"Display Name\\\" <sip:account@provider>\".\n   *\n   * This field is mandatory.\n   */\n  id: string;\n\n  /**\n   * This is the URL to be put in the request URI for the registration,\n   * and will look something like \"sip:serviceprovider\".\n   *\n   * This field should be specified if registration is desired. If the\n   * value is empty, no account registration will be performed.\n   */\n  reg_uri?: string;\n\n  /**\n   * The optional custom SIP headers to be put in the registration\n   * request.\n   */\n  reg_hdr_list?: Object[];\n\n  /**\n   * Additional parameters that will be appended in the Contact header\n   * for this account. This will only affect REGISTER requests and\n   * will be appended after \\a contact_params;\n   *\n   * The parameters should be preceeded by semicolon, and all strings must\n   * be properly escaped. Example:\n   *   \";my-param=X;another-param=Hi%20there\"\n   */\n  reg_contact_params?: string;\n\n  /**\n   * The optional custom SIP headers to be put in the presence\n   * subscription request.\n   */\n  sub_hdr_list?: Object[];\n\n  /**\n   * Subscribe to message waiting indication events (RFC 3842).\n   *\n   * See also \\a enable_unsolicited_mwi field on #pjsua_config.\n   *\n   * Default: no\n   */\n  mwi_enabled?: boolean;\n\n  /**\n   * Specify the default expiration time for Message Waiting Indication\n   * (RFC 3842) event subscription. This must not be zero.\n   *\n   * Default: PJSIP_MWI_DEFAULT_EXPIRES\n   */\n  mwi_expires?: number;\n\n  /**\n   * If this flag is set, the presence information of this account will\n   * be PUBLISH-ed to the server where the account belongs.\n   *\n   * Default: PJ_FALSE\n   */\n  publish_enabled?: boolean;\n\n  /**\n   * Event publication options.\n   */\n  publish_opt?: {\n    /**\n     * Specify whether the client publication session should queue the\n     * PUBLISH request should there be another PUBLISH transaction still\n     * pending. If this is set to false, the client will return error\n     * on the PUBLISH request if there is another PUBLISH transaction still\n     * in progress.\n     *\n     * Default: PJSIP_PUBLISHC_QUEUE_REQUEST\n     */\n    queue_request: boolean;\n  };\n\n  /**\n   * Maximum time to wait for unpublication transaction(s) to complete\n   * during shutdown process, before sending unregistration. The library\n   * tries to wait for the unpublication (un-PUBLISH) to complete before\n   * sending REGISTER request to unregister the account, during library\n   * shutdown process. If the value is set too short, it is possible that\n   * the unregistration is sent before unpublication completes, causing\n   * unpublication request to fail.\n   *\n   * Default: PJSUA_UNPUBLISH_MAX_WAIT_TIME_MSEC\n   */\n  unpublish_max_wait_time_msec?: number;\n\n  /**\n   * Authentication preference.\n   */\n  auth_pref?: {\n    /**\n     * If this flag is set, the authentication client framework will\n     * send an empty Authorization header in each initial request.\n     * Default is no.\n     */\n    initial_auth: boolean;\n\n    /**\n     * Specify the algorithm to use when empty Authorization header\n     * is to be sent for each initial request (see above)\n     */\n    algorithm: string;\n  };\n\n  /**\n   * Optional PIDF tuple ID for outgoing PUBLISH and NOTIFY. If this value\n   * is not specified, a random string will be used.\n   */\n  pidf_tuple_id?: string;\n\n  /**\n   * Optional URI to be put as Contact for this account. It is recommended\n   * that this field is left empty, so that the value will be calculated\n   * automatically based on the transport address.\n   */\n  force_contact?: string;\n\n  /**\n   * Additional parameters that will be appended in the Contact header\n   * for this account. This will affect the Contact header in all SIP\n   * messages sent on behalf of this account, including but not limited to\n   * REGISTER, INVITE, and SUBCRIBE requests or responses.\n   *\n   * The parameters should be preceeded by semicolon, and all strings must\n   * be properly escaped. Example:\n   *   \";my-param=X;another-param=Hi%20there\"\n   */\n  contact_params?: string;\n\n  /**\n   * Additional URI parameters that will be appended in the Contact URI\n   * for this account. This will affect the Contact URI in all SIP\n   * messages sent on behalf of this account, including but not limited to\n   * REGISTER, INVITE, and SUBCRIBE requests or responses.\n   *\n   * The parameters should be preceeded by semicolon, and all strings must\n   * be properly escaped. Example:\n   *   \";my-param=X;another-param=Hi%20there\"\n   */\n  contact_uri_params?: string;\n\n  /**\n   * Specify how support for reliable provisional response (100rel/\n   * PRACK) should be used for all sessions in this account. See the\n   * documentation of pjsua_100rel_use enumeration for more info.\n   *\n   * Default: The default value is taken from the value of\n   *          require_100rel in pjsua_config.\n   */\n  require_100rel?: string;\n\n  /**\n   * Specify the usage of Session Timers for all sessions. See the\n   * #pjsua_sip_timer_use for possible values.\n   *\n   * Default: PJSUA_SIP_TIMER_OPTIONAL\n   */\n  use_timer?: string;\n\n  /**\n   * Specify Session Timer settings, see #pjsip_timer_setting.\n   */\n  timer_setting?: {\n\n    /**\n     * Specify minimum session expiration period, in seconds. Must not be\n     * lower than 90. Default is 90.\n     */\n    min_se: number;\n\n    /**\n     * Specify session expiration period, in seconds. Must not be lower than\n     * #min_se. Default is 1800.\n     */\n    sess_expires: number;\n  };\n\n  /**\n   * Number of proxies in the proxy array below.\n   */\n  proxy_cnt?: number;\n\n  /**\n   * Optional URI of the proxies to be visited for all outgoing requests\n   * that are using this account (REGISTER, INVITE, etc). Application need\n   * to specify these proxies if the service provider requires that requests\n   * destined towards its network should go through certain proxies first\n   * (for example, border controllers).\n   *\n   * These proxies will be put in the route set for this account, with\n   * maintaining the orders (the first proxy in the array will be visited\n   * first). If global outbound proxies are configured in pjsua_config,\n   * then these account proxies will be placed after the global outbound\n   * proxies in the routeset.\n   */\n  proxy?: string;\n\n  /**\n   * If remote sends SDP answer containing more than one format or codec in\n   * the media line, send re-INVITE or UPDATE with just one codec to lock\n   * which codec to use.\n   *\n   * Default: 1 (Yes). Set to zero to disable.\n   */\n  lock_codec?: boolean;\n\n  /**\n   * Optional interval for registration, in seconds. If the value is zero,\n   * default interval will be used (PJSUA_REG_INTERVAL, 300 seconds).\n   */\n  reg_timeout?: number;\n\n  /**\n   * Specify the number of seconds to refresh the client registration\n   * before the registration expires.\n   *\n   * Default: PJSIP_REGISTER_CLIENT_DELAY_BEFORE_REFRESH, 5 seconds\n   */\n  reg_delay_before_refresh?: number;\n\n  /**\n   * Specify the maximum time to wait for unregistration requests to\n   * complete during library shutdown sequence.\n   *\n   * Default: PJSUA_UNREG_TIMEOUT\n   */\n  unreg_timeout?: number;\n\n  /**\n   * Number of credentials in the credential array.\n   */\n  cred_count?: number;\n\n  /**\n   * Array of credentials. If registration is desired, normally there should\n   * be at least one credential specified, to successfully authenticate\n   * against the service provider. More credentials can be specified, for\n   * example when the requests are expected to be challenged by the\n   * proxies in the route set.\n   */\n  cred_info?: string[];\n\n  /**\n   * Optionally bind this account to specific transport. This normally is\n   * not a good idea, as account should be able to send requests using\n   * any available transports according to the destination. But some\n   * application may want to have explicit control over the transport to\n   * use, so in that case it can set this field.\n   *\n   * Default: -1 (PJSUA_INVALID_ID)\n   *\n   * @see pjsua_acc_set_transport()\n   */\n  transport_id?: number;\n\n  /**\n   * This option is used to update the transport address and the Contact\n   * header of REGISTER request. When this option is  enabled, the library\n   * will keep track of the public IP address from the response of REGISTER\n   * request. Once it detects that the address has changed, it will\n   * unregister current Contact, update the Contact with transport address\n   * learned from Via header, and register a new Contact to the registrar.\n   * This will also update the public name of UDP transport if STUN is\n   * configured.\n   *\n   * See also contact_rewrite_method field.\n   *\n   * Default: 1 (yes)\n   */\n  allow_contact_rewrite?: boolean;\n\n  /**\n   * Specify how Contact update will be done with the registration, if\n   * \\a allow_contact_rewrite is enabled. The value is bitmask combination of\n   * \\a pjsua_contact_rewrite_method. See also pjsua_contact_rewrite_method.\n   *\n   * Value PJSUA_CONTACT_REWRITE_UNREGISTER(1) is the legacy behavior.\n   *\n   * Default value: PJSUA_CONTACT_REWRITE_METHOD\n   * (PJSUA_CONTACT_REWRITE_NO_UNREG | PJSUA_CONTACT_REWRITE_ALWAYS_UPDATE)\n   */\n  contact_rewrite_method?: number;\n\n  /**\n   * Specify if source TCP port should be used as the initial Contact\n   * address if TCP/TLS transport is used. Note that this feature will\n   * be automatically turned off when nameserver is configured because\n   * it may yield different destination address due to DNS SRV resolution.\n   * Also some platforms are unable to report the local address of the\n   * TCP socket when it is still connecting. In these cases, this\n   * feature will also be turned off.\n   *\n   * Default: PJ_TRUE (yes).\n   */\n  contact_use_src_port?: boolean;\n\n  /**\n   * This option is used to overwrite the \"sent-by\" field of the Via header\n   * for outgoing messages with the same interface address as the one in\n   * the REGISTER request, as long as the request uses the same transport\n   * instance as the previous REGISTER request.\n   *\n   * Default: 1 (yes)\n   */\n  allow_via_rewrite?: boolean;\n\n  /**\n   * This option controls whether the IP address in SDP should be replaced\n   * with the IP address found in Via header of the REGISTER response, ONLY\n   * when STUN and ICE are not used. If the value is FALSE (the original\n   * behavior), then the local IP address will be used. If TRUE, and when\n   * STUN and ICE are disabled, then the IP address found in registration\n   * response will be used.\n   *\n   * Default: PJ_FALSE (no)\n   */\n  allow_sdp_nat_rewrite?: boolean;\n\n  /**\n   * Control the use of SIP outbound feature. SIP outbound is described in\n   * RFC 5626 to enable proxies or registrar to send inbound requests back\n   * to UA using the same connection initiated by the UA for its\n   * registration. This feature is highly useful in NAT-ed deployemtns,\n   * hence it is enabled by default.\n   *\n   * Note: currently SIP outbound can only be used with TCP and TLS\n   * transports. If UDP is used for the registration, the SIP outbound\n   * feature will be silently ignored for the account.\n   *\n   * Default: PJ_TRUE\n   */\n  use_rfc5626?: boolean;\n\n  /**\n   * Specify SIP outbound (RFC 5626) instance ID to be used by this\n   * application. If empty, an instance ID will be generated based on\n   * the hostname of this agent. If application specifies this parameter, the\n   * value will look like \"<urn:uuid:00000000-0000-1000-8000-AABBCCDDEEFF>\"\n   * without the doublequote.\n   *\n   * Default: empty\n   */\n  rfc5626_instance_id?: string;\n\n  /**\n   * Specify SIP outbound (RFC 5626) registration ID. The default value\n   * is empty, which would cause the library to automatically generate\n   * a suitable value.\n   *\n   * Default: empty\n   */\n  rfc5626_reg_id?: string;\n\n  /**\n   * Set the interval for periodic keep-alive transmission for this account.\n   * If this value is zero, keep-alive will be disabled for this account.\n   * The keep-alive transmission will be sent to the registrar's address,\n   * after successful registration.\n   *\n   * Default: 15 (seconds)\n   */\n  ka_interval?: number;\n\n  /**\n   * Specify the data to be transmitted as keep-alive packets.\n   *\n   * Default: CR-LF\n   */\n  ka_data?: string;\n\n  /**\n   * Specify whether incoming video should be shown to screen by default.\n   * This applies to incoming call (INVITE), incoming re-INVITE, and\n   * incoming UPDATE requests.\n   *\n   * Regardless of this setting, application can detect incoming video\n   * by implementing \\a on_call_media_state() callback and enumerating\n   * the media stream(s) with #pjsua_call_get_info(). Once incoming\n   * video is recognised, application may retrieve the window associated\n   * with the incoming video and show or hide it with\n   * #pjsua_vid_win_set_show().\n   *\n   * Default: PJ_FALSE\n   */\n  vid_in_auto_show?: boolean;\n\n  /**\n   * Specify whether outgoing video should be activated by default when\n   * making outgoing calls and/or when incoming video is detected. This\n   * applies to incoming and outgoing calls, incoming re-INVITE, and\n   * incoming UPDATE. If the setting is non-zero, outgoing video\n   * transmission will be started as soon as response to these requests\n   * is sent (or received).\n   *\n   * Regardless of the value of this setting, application can start and\n   * stop outgoing video transmission with #pjsua_call_set_vid_strm().\n   *\n   * Default: PJ_FALSE\n   */\n  vid_out_auto_transmit?: boolean;\n\n  /**\n   * Specify video window's flags. The value is a bitmask combination of\n   * #pjmedia_vid_dev_wnd_flag.\n   *\n   * Default: 0\n   */\n  vid_wnd_flags?: number;\n\n  /**\n   * Specify the default capture device to be used by this account. If\n   * \\a vid_out_auto_transmit is enabled, this device will be used for\n   * capturing video.\n   *\n   * Default: PJMEDIA_VID_DEFAULT_CAPTURE_DEV\n   */\n  vid_cap_dev?: string;\n\n  /**\n   * Specify the default rendering device to be used by this account.\n   *\n   * Default: PJMEDIA_VID_DEFAULT_RENDER_DEV\n   */\n  vid_rend_dev?: string;\n\n  /**\n   * Specify the send rate control for video stream.\n   *\n   * Default: see #pjmedia_vid_stream_rc_config\n   */\n  vid_stream_rc_cfg?: string;\n\n  /**\n   * Specify the send keyframe config for video stream.\n   *\n   * Default: see #pjmedia_vid_stream_sk_config\n   */\n  vid_stream_sk_cfg?: string;\n\n  /**\n   * Media transport config.\n   */\n  rtp_cfg?: string;\n\n  /**\n   * Specify NAT64 options.\n   *\n   * Default: PJSUA_NAT64_DISABLED\n   */\n  nat64_opt?: string;\n\n  /**\n   * Specify whether IPv6 should be used on media.\n   */\n  ipv6_media_use?: boolean;\n\n  /**\n   * Control the use of STUN for the SIP signaling.\n   *\n   * Default: PJSUA_STUN_USE_DEFAULT\n   */\n  sip_stun_use?: string;\n\n  /**\n   * Control the use of STUN for the media transports.\n   *\n   * Default: PJSUA_STUN_RETRY_ON_FAILURE\n   */\n  media_stun_use?: string;\n\n  /**\n   * Control the use of ICE in the account. By default, the settings in the\n   * \\a pjsua_media_config will be used.\n   *\n   * Default: PJSUA_ICE_CONFIG_USE_DEFAULT\n   */\n  ice_cfg_use?: string;\n\n  /**\n   * The custom ICE setting for this account. This setting will only be\n   * used if \\a ice_cfg_use is set to PJSUA_ICE_CONFIG_USE_CUSTOM\n   */\n  ice_cfg?: string;\n\n  /**\n   * Control the use of TURN in the account. By default, the settings in the\n   * \\a pjsua_media_config will be used\n   *\n   * Default: PJSUA_TURN_CONFIG_USE_DEFAULT\n   */\n  turn_cfg_use?: string;\n\n  /**\n   * The custom TURN setting for this account. This setting will only be\n   * used if \\a turn_cfg_use is set to PJSUA_TURN_CONFIG_USE_CUSTOM\n   */\n  turn_cfg?: string;\n\n  /**\n   * Specify whether secure media transport should be used for this account.\n   * Valid values are PJMEDIA_SRTP_DISABLED, PJMEDIA_SRTP_OPTIONAL, and\n   * PJMEDIA_SRTP_MANDATORY.\n   *\n   * Default: #PJSUA_DEFAULT_USE_SRTP\n   */\n  use_srtp?: boolean;\n\n  /**\n   * Specify whether SRTP requires secure signaling to be used. This option\n   * is only used when \\a use_srtp option above is non-zero.\n   *\n   * Valid values are:\n   *  0: SRTP does not require secure signaling\n   *  1: SRTP requires secure transport such as TLS\n   *  2: SRTP requires secure end-to-end transport (SIPS)\n   *\n   * Default: #PJSUA_DEFAULT_SRTP_SECURE_SIGNALING\n   */\n  srtp_secure_signaling?: number;\n\n  /**\n   * This setting has been deprecated and will be ignored.\n   */\n  srtp_optional_dup_offer?: boolean;\n\n  /**\n   * Specify SRTP transport setting. Application can initialize it with\n   * default values using pjsua_srtp_opt_default().\n   */\n  srtp_opt?: string;\n\n  /**\n   * Specify interval of auto registration retry upon registration failure,\n   * in seconds. Set to 0 to disable auto re-registration. Note that\n   * registration will only be automatically retried for temporal failures\n   * considered to be recoverable in relatively short term, such as:\n   * 408 (Request Timeout), 480 (Temporarily Unavailable),\n   * 500 (Internal Server Error), 502 (Bad Gateway),\n   * 503 (Service Unavailable), 504 (Server Timeout),\n   * 6xx (global failure), and failure caused by transport problem.\n   * For registration retry caused by transport failure, the first retry\n   * will be done after \\a reg_first_retry_interval seconds instead.\n   * Note that the interval will be randomized slightly by some seconds\n   * (specified in \\a reg_retry_random_interval) to avoid all clients\n   * re-registering at the same time.\n   *\n   * See also \\a reg_first_retry_interval setting.\n   *\n   * Default: #PJSUA_REG_RETRY_INTERVAL\n   */\n  reg_retry_interval?: number;\n\n  /**\n   * This specifies the interval for the first registration retry. The\n   * registration retry is explained in \\a reg_retry_interval. Note that\n   * the value here will also be randomized by some seconds (specified\n   * in \\a reg_retry_random_interval) to avoid all clients re-registering\n   * at the same time.\n   *\n   * Default: 0\n   */\n  reg_first_retry_interval?: number;\n\n  /**\n   * This specifies maximum randomized value to be added/substracted\n   * to/from the registration retry interval specified in \\a\n   * reg_retry_interval and \\a reg_first_retry_interval, in second.\n   * This is useful to avoid all clients re-registering at the same time.\n   * For example, if the registration retry interval is set to 100 seconds\n   * and this is set to 10 seconds, the actual registration retry interval\n   * will be in the range of 90 to 110 seconds.\n   *\n   * Default: 10\n   */\n  reg_retry_random_interval?: number;\n\n  /**\n   * Specify whether calls of the configured account should be dropped\n   * after registration failure and an attempt of re-registration has\n   * also failed.\n   *\n   * Default: PJ_FALSE (disabled)\n   */\n  drop_calls_on_reg_fail?: boolean;\n\n  /**\n   * Specify how the registration uses the outbound and account proxy\n   * settings. This controls if and what Route headers will appear in\n   * the REGISTER request of this account. The value is bitmask combination\n   * of PJSUA_REG_USE_OUTBOUND_PROXY and PJSUA_REG_USE_ACC_PROXY bits.\n   * If the value is set to 0, the REGISTER request will not use any proxy\n   * (i.e. it will not have any Route headers).\n   *\n   * Default: 3 (PJSUA_REG_USE_OUTBOUND_PROXY | PJSUA_REG_USE_ACC_PROXY)\n   */\n  reg_use_proxy?: number;\n\n  /**\n   * Specify whether stream keep-alive and NAT hole punching with\n   * non-codec-VAD mechanism (see @ref PJMEDIA_STREAM_ENABLE_KA) is enabled\n   * for this account.\n   *\n   * Default: PJ_FALSE (disabled)\n   */\n  use_stream_ka?: boolean;\n\n  /**\n   * Specify how to offer call hold to remote peer. Please see the\n   * documentation on #pjsua_call_hold_type for more info.\n   *\n   * Default: PJSUA_CALL_HOLD_TYPE_DEFAULT\n   */\n  call_hold_type?: string;\n\n  /**\n   * Specify whether the account should register as soon as it is\n   * added to the UA. Application can set this to PJ_FALSE and control\n   * the registration manually with pjsua_acc_set_registration().\n   *\n   * Default: PJ_TRUE\n   */\n  register_on_acc_add?: boolean;\n\n  /**\n   * Specify account configuration specific to IP address change used when\n   * calling #pjsua_handle_ip_change().\n   */\n  ip_change_cfg?: string;\n\n  /**\n   * Enable RTP and RTCP multiplexing.\n   */\n  enable_rtcp_mux?: boolean;\n\n  /**\n   * RTCP Feedback configuration.\n   */\n  rtcp_fb_cfg?: string;\n\n}\n\nexport interface IAccount {\n  id?: number,\n  uri?: string,\n  name?: string | null,\n  username: string,\n  domain: string,\n  password: string,\n  proxy?: string | null,\n  transport?: string | null,\n  contactParams?: string | null,\n  contactUriParams?: string | null,\n  regServer?: string | null,\n  regTimeout?: number,\n  regOnAdd?: boolean,\n  regContactParams?: string | null,\n  regHeaders?: Object | null,\n  registration?: IAccountRegistration\n}\n\n/**\n * This describes account configuration and registration status\n */\nexport default class Account implements IAccount {\n  /**\n   * The account ID.\n   */\n  id: number | undefined\n  /**\n   * This is the URL to be put in the request URI for the registration, and will look something like \"sip:serviceprovider\".\n   */\n  uri: string | undefined\n  /**\n   * Full name specified in Endpoint.createAccount().\n   * If this value has been set to null, then it will return \"sip:\" + this.getDomain\n   */\n  name: string | null | undefined\n  /**\n   * Username specified in Endpoint.createAccount().\n   */\n  username: string\n  /**\n   * Domain specified in Endpoint.createAccount().\n   */\n  domain: string\n  /**\n   * Password specified in Endpoint.createAccount().\n   */\n  password: string\n  /**\n   * Proxy specified in Endpoint.createAccount().\n   */\n  proxy: string | null | undefined\n  /**\n   * Transport specified in Endpoint.createAccount().\n   */\n  transport: string | null | undefined\n  /**\n   * Additional parameters that will be appended in the Contact header\n   * for this account.\n   */\n  contactParams: string | null | undefined\n  /**\n   * Additional URI parameters that will be appended in the Contact URI\n   * for this account.\n   */\n  contactUriParams: string | null | undefined\n  /**\n   * Port specified in Endpoint.createAccount().\n   */\n  regServer: string | null | undefined\n  /**\n   * Port specified in Endpoint.createAccount().\n   */\n  regTimeout: number | undefined\n  regOnAdd: boolean | undefined\n  regContactParams: string | null | undefined\n  regHeaders: Object | null | undefined\n  /**\n   * Account registration status.\n   */\n  registration: IAccountRegistration | undefined\n\n  constructor (props: IAccount) {\n    this.id = props.id\n    this.uri = props.uri\n    this.name = props.name\n    this.username = props.username\n    this.domain = props.domain\n    this.password = props.password\n    this.proxy = props.proxy\n    this.transport = props.transport\n    this.contactParams = props.contactParams\n    this.contactUriParams = props.contactUriParams\n    this.regServer = props.regServer\n    this.regTimeout = props.regTimeout\n    this.regContactParams = props.regContactParams\n    this.regHeaders = props.regHeaders\n    this.regOnAdd = props.regOnAdd\n    this.registration = props.registration\n  }\n}\n"],"file":"Account.js"}