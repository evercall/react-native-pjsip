{"version":3,"sources":["../src/PjSipModule.ts"],"names":["NativeModules","PjSipModule"],"mappings":"AAEA,SAASA,aAAT,QAA8B,cAA9B;AAuCA,MAAM;AAAEC,EAAAA;AAAF,IAAkBD,aAAxB;AAUA,eAAeC,WAAf","sourcesContent":["import Account, { AccountConfiguration } from './Account'\nimport { CallData, Codec, Orientation, PJSIPCallSettings, PJSIPMessageData, StartConfiguration } from './index'\nimport { NativeModules } from 'react-native'\n\ninterface PjSipModuleInterface {\n  start: (config: StartConfiguration, callBack?: (success: boolean, data: {\n    calls: CallData[],\n    accounts: Account[],\n    settings: {\n      codecs: string[]\n    },\n    connectivity: boolean\n  }) => void) => void,\n  stop: () => void,\n  updateStunServers: (accountId: number, stunServerList: string[], callBack?: (success: boolean) => void) => void,\n  createAccount: (config: AccountConfiguration, callBack?: (success: boolean, account: Account) => void) => void,\n  registerAccount: (accountId: number, renew: boolean, callBack?: (success: boolean, reason: string) => void) => void,\n  deleteAccount: (accountId: number) => void,\n  getAccounts: (callBack?: (success: boolean, data: Account[]) => void) => void,\n  getAccount: (accountId: number, callBack?: (success: boolean, data: Account | string) => void) => void,\n  getCalls: (callBack?: (success: boolean, data: CallData[]) => void) => void,\n  makeCall: (accountId: number, destination: string, callSettings?: PJSIPCallSettings, messageData?: PJSIPMessageData, callBack?: (success: boolean, data: CallData | string) => void) => void,\n  answerCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  hangupCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  declineCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  holdCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  unholdCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  muteCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  unMuteCall: (callId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  useSpeaker: () => void,\n  useEarpiece: () => void,\n  xferCall: (callId: number, destination: string, callBack?: (success: boolean, reason: string) => void) => void,\n  xferReplacesCall: (callId: number, destinationCallId: number, callBack?: (success: boolean, reason: string) => void) => void,\n  redirectCall: (callId: number, destination: string, callBack?: (success: boolean, reason: string) => void) => void,\n  dtmfCall: (callId: number, dtmf: string, callBack?: (success: boolean, reason: string) => void) => void,\n  activateAudioSession: (callBack?: (success: boolean) => void) => void,\n  deactivateAudioSession: (callBack?: (success: boolean, reason: string) => void) => void,\n  changeOrientation: (changeOrientation: Orientation) => void,\n  changeCodecSettings: (codecs: Codec[], callBack?: (success: boolean) => void) => void,\n}\n\nconst { PjSipModule } = NativeModules\n\ndeclare module 'react-native' {\n\n  interface NativeModulesStatic {\n    PjSipModule: PjSipModuleInterface\n  }\n\n}\n\nexport default PjSipModule as PjSipModuleInterface\n"],"file":"PjSipModule.js"}